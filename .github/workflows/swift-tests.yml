name: iOS workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-15

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build
      env:
        scheme: "globoplay-iOS"
        platform: "iOS Simulator"
      working-directory: globoplay-iOS
      run: |
        device_id=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone 14.*id:[A-Z0-9-]+' | head -1 | sed -e "s/.*id://")
        if [ -z "$device_id" ]; then
          echo "No valid device found. Please check the device name and try again."
          exit 1
        fi
        if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
        file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        xcrun simctl shutdown "$device_id"
        sleep 5
        xcrun simctl boot "$device_id"
        xcodebuild -quiet build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "id=$device_id"

    - name: Test
      env:
        scheme: "globoplay-iOS"
        platform: "iOS Simulator"
      working-directory: globoplay-iOS
      run: |
        device_id=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone 14.*id:[A-Z0-9-]+' | head -1 | sed -e "s/.*id://")
        if [ -z "$device_id" ]; then
          echo "No valid device found. Please check the device name and try again."
          exit 1
        fi
        if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
        file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
        xcodebuild -quiet test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "id=$device_id"

